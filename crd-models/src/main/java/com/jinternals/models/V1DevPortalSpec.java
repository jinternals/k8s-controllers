/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.jinternals.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * DevPortalSpec defines the desired state of DevPortal
 */
@ApiModel(description = "DevPortalSpec defines the desired state of DevPortal")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-19T15:08:28.367Z[Etc/UTC]")
public class V1DevPortalSpec {
  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Map<String, String> data = null;

  public static final String SERIALIZED_NAME_REPLACE_URLS_IN = "replaceUrlsIn";
  @SerializedName(SERIALIZED_NAME_REPLACE_URLS_IN)
  private String replaceUrlsIn;

  public static final String SERIALIZED_NAME_REPLICAS = "replicas";
  @SerializedName(SERIALIZED_NAME_REPLICAS)
  private Integer replicas;


  public V1DevPortalSpec data(Map<String, String> data) {
    
    this.data = data;
    return this;
  }

  public V1DevPortalSpec putDataItem(String key, String dataItem) {
    if (this.data == null) {
      this.data = new HashMap<>();
    }
    this.data.put(key, dataItem);
    return this;
  }

   /**
   * Free form key value pairs
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Free form key value pairs")

  public Map<String, String> getData() {
    return data;
  }


  public void setData(Map<String, String> data) {
    this.data = data;
  }


  public V1DevPortalSpec replaceUrlsIn(String replaceUrlsIn) {
    
    this.replaceUrlsIn = replaceUrlsIn;
    return this;
  }

   /**
   * Get replaceUrlsIn
   * @return replaceUrlsIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReplaceUrlsIn() {
    return replaceUrlsIn;
  }


  public void setReplaceUrlsIn(String replaceUrlsIn) {
    this.replaceUrlsIn = replaceUrlsIn;
  }


  public V1DevPortalSpec replicas(Integer replicas) {
    
    this.replicas = replicas;
    return this;
  }

   /**
   * Get replicas
   * minimum: 1
   * @return replicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReplicas() {
    return replicas;
  }


  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1DevPortalSpec v1DevPortalSpec = (V1DevPortalSpec) o;
    return Objects.equals(this.data, v1DevPortalSpec.data) &&
        Objects.equals(this.replaceUrlsIn, v1DevPortalSpec.replaceUrlsIn) &&
        Objects.equals(this.replicas, v1DevPortalSpec.replicas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, replaceUrlsIn, replicas);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1DevPortalSpec {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    replaceUrlsIn: ").append(toIndentedString(replaceUrlsIn)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

